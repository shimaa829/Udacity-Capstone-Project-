Description: >
    Shimaa Abd El Azim / Udacity Capstone Project
    This template is for Final Project  in the Udacity DevOps Engineer Nanodegree

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: CIDR for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnetCIDR:
        Description: CIDR for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24

Resources:

    K8SVPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Sub VPC_${EnvironmentName}

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref K8SVPC
    
    PublicSubnet: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref K8SVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnetCIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    
    PublicRT:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref K8SVPC
            Tags: 
                - Key: Name 
                  Value: !Sub shimaa-${EnvironmentName} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRT
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubRTAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRT
            SubnetId: !Ref PublicSubnet



    K8sSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "K8s Security Group"
            VpcId: !Ref K8SVPC
            SecurityGroupIngress:
            - FromPort: 0
              IpProtocol: TCP
              ToPort: 65535
              CidrIp: 0.0.0.0/0

            SecurityGroupEgress:
            - FromPort: 0
              IpProtocol: TCP
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    K8sInstance:
        Type: AWS::EC2::Instance
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    sudo apt-get update -y
                    curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
                    chmod +x ./kubectl
                    sudo mv ./kubectl /usr/local/bin/kubectl
                    sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic test"
                    sudo apt-get update -y
                    sudo apt install docker-ce -y
                    sudo usermod -aG docker ubuntu
                    sudo chmod 666 /var/run/docker.sock
                    sudo systemctl start docker
                    sudo systemctl enable docker
                    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
                    minikube start
                    sleep 60
                    git clone https://github.com/shimaa829/Udacity-Capstone-Project-
                    cd Udacity-Capstone-Project-/
                    kubectl apply -f kubernetes/deployment.yml
                    kubectl apply -f kubernetes/service.yml

            ImageId: ami-0bcc094591f354be2 
            KeyName: kube-key
            SecurityGroupIds: 
                - !Ref K8sSG
            SubnetId: !Ref PublicSubnet
            InstanceType: t3.medium 
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                      VolumeSize: '10'
            Tags: 
                - Key: Name
                  Value: "K8s NODE"


Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref K8SVPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    PublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRT
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    PublicSubnet:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN
    
    masternode:
        Description: A reference to the masterec2
        Value: !Ref K8sInstance
        Export:
          Name: master-node